Checks: 'clang-diagnostic-*,bugprone-*,readability-*'
# 'clang-diagnostic-*,clang-analyzer-*,bugprone-*,cppcoreguidelines-*,misc-*,modernize-*,performance-*,readability-*'
WarningsAsErrors: ''
HeaderFilterRegex: ''
CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,       value: lower_case }
  - { key: readability-identifier-naming.ClassCase,           value: CamelCase  }
  - { key: readability-identifier-naming.PrivateMemberPrefix, value: m_         }
  - { key: readability-identifier-naming.StructCase,          value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,        value: lower_case }
  - { key: readability-identifier-naming.VariableCase,        value: lower_case }
  - { key: readability-identifier-naming.GlobalConstantCase,  value: UPPER_CASE }
  
# AnalyzeTemporaryDtors: false
# FormatStyle:     none
# User:            nab
# CheckOptions:    
#   - key:             google-readability-braces-around-statements.ShortStatementLines
#     value:           '1'
#   - key:             google-readability-function-size.StatementThreshold
#     value:           '800'
#   - key:             google-readability-namespace-comments.ShortNamespaceLines
#     value:           '10'
#   - key:             google-readability-namespace-comments.SpacesBeforeComments
#     value:           '2'
#   - key:             modernize-loop-convert.MaxCopySize
#     value:           '16'
#   - key:             modernize-loop-convert.MinConfidence
#     value:           reasonable
#   - key:             modernize-loop-convert.NamingStyle
#     value:           CamelCase
#   - key:             modernize-pass-by-value.IncludeStyle
#     value:           llvm
#   - key:             modernize-replace-auto-ptr.IncludeStyle
#     value:           llvm
#   - key:             modernize-use-nullptr.NullMacros
#     value:           'NULL'